/**
 * CRSSearch - A simple implementation of a prefix search for filtering a list of university courses
 * down to just a few that a given customer is intereste din.
 *
 * Developed by Denis Kisselev <denis@dkisselev.net>.
 * November 2013, for the UVic Bookstore
 */

(function () {
    function Searcher(query, options) {
        options = options || {};

        // Strip non-alphanumeric chars
        query = query.replace(/\W/g, '');
        query = options.caseSensitive ? query : query.toLowerCase();

        var queryLen = query.length;

        /**
         * Compute whether the given query is within the provided key
         * @param {String} key The key to search in
         * @return
         *     {Boolean} isWithin Whether the query is contained within the key or not
         *     {Boolean} exactMatch If the query is an exact match to a key
         * @public
         */
        this.search = function (key)
        {
            key = options.caseSensitive ? key : key.toLowerCase();
            key = key.replace(/\W/g, '');
            var keyLen = key.length;

            if (query === key)
            {
                // Exact match
                return {
                    isWithin: true,
                    exactMatch: true
                };
            }

            if (queryLen > keyLen)
            {
                // Query is longer than the provided key, can't possibly match
                return {
                    isWithin: false,
                    exactMatch: false
                };
            }

            for (i = 0; i < queryLen; i++)
            {
                // If the given charcater of the query isn't within the key, the whole string isn't within it, return the result.
                if(query.charAt(i) != key.charAt(i))
                {
                    return {
                        isWithin: false,
                        exactMatch: false
                    };
                }
            }

            return {
                isWithin: true,
                exactMatch: false
            };

        }
    }

    /**
     * @param {Array} courses Haystack, all possible courses to test among
     * @param {Object} options
     * @public
     */
    function CRSSearch(courses, options) {
        /**
         * Searches for the smallest non-empty list of courses that match the string.
         * @param {String} query The text to search for in the available courses.
         * @return {Array} A list of all search matches.
         * @public
         */
        this.search = function (query) {

            var numCourses = courses.length,
            course = null,
            searcher = new Searcher(query, options),
            matchedCourses = [];

            for(var i = 0; i < numCourses; i++)
            {
                course = courses[i];
                var key = course.dept + course.code + course.section;

                searchResult = searcher.search(key);

                if (searchResult.exactMatch)
                {
                    matchedCourses = [];
                    matchedCourses.push(course);
                    return matchedCourses;
                }
                else if (searchResult.isWithin)
                {
                    matchedCourses.push(course);
                }

            }
            
            return matchedCourses;
        }
    }

    //Export to Common JS Loader
    if (typeof module !== 'undefined') {
        if (typeof module.setExports === 'function') {
            module.setExports(CRSSearch);
        } else if (module.exports) {
            module.exports = CRSSearch;
        }
    } else {
        window.CRSSearch = CRSSearch;
    }

})();