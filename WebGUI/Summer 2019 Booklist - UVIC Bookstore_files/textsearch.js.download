function search() {
    this.initialize = function(courses)
    {
        var $inputSearch = $('#inputSearch'),
            $resetSearch = $('#resetSearch'),
            $availableBox = $('#available-courses'),
            $selectedBox = $('#selected-courses'),
            availableSource = $("#available-course-template").html(),
            availableTemplate = Handlebars.compile(availableSource),
            selectedSource = $("#selected-course-template").html(),
            selectedTemplate = Handlebars.compile(selectedSource),
            crssearch = new CRSSearch(courses),
            availableHTML = generateCourseList(courses);

        // First thing's first: Show the user all the available courses.
        $availableBox.html(availableHTML);

        // If the search box does not have focus, and a keyboard press is detected, give the box focus.
        $(document).bind('keydown', function (evt){

            var code = (evt.keyCode ? evt.keyCode : evt.which);
            var inputSelected = false;

            // Only trigger if the key pressed is alphanumeric.
            var c = String.fromCharCode(code);
            var isWordcharacter = c.match(/^[a-z0-9]+$/i);

            if(!isWordcharacter) {
                return;
            }

            // Check to make sure that no inputs currently have focus
            $('input').each(function(){
                if($(this).is(":focus"))
                {
                    inputSelected = true;
                }
            });

            if(inputSelected == false)
            {
                $inputSearch.focus();
            }
        });

        // When a key is pressed and released in the searchbox, perform the search. (the search function is defined below at approx line 60)
        $inputSearch.on('keyup', search);

        // If the reset button is clicked, clear the Searchbox text and perform a search for the empty string.
        $resetSearch.click(function() {
            $inputSearch.val('');
            search();
        });

        // When a checkbox item within the available box is clicked, if a checkmark was added, add that item to the selected box
        // otherwise remove it from the selected box
        $availableBox.on("click", ":checkbox", function() {
            var checkedVal = this.value;

            var result = $.grep(courses, function(e){ return e.id == checkedVal; });

            var course = result[0];

            if(this.checked)
            {
                course.checked = "checked"
                var html = selectedTemplate(course);
                $selectedBox.append(html);
            }
            else
            {
                $selectedBox.find('input[value="' + course.id + '"]').closest('div').remove();
            }
        });

        // All the elements in the selected box should be checked, so if something in that box is unchecked, remove it from the box and
        // uncheck the corresponding entry in the available box
        $selectedBox.on("click", ":checkbox", function() {

            var checkedVal = this.value;

            var result = $.grep(courses, function(e){ return e.id == checkedVal; });
            var courseObj = result[0];

            if(!this.checked)
            {
                $selectedBox.find('input[value="' + courseObj.id + '"]').closest('div').remove();
                $availableBox.find('input[value="' + courseObj.id + '"]').attr('checked', false);
            }
        });


        // Perform a search, if the search string is empty, just show all the courses to save time.
        // Otherwise, run the search function from CRSSearch.js (in /js/), and set the appropriate results.
        function search()
        {
            $availableBox.scrollTop(0);
            $availableBox.empty();

            if ($inputSearch.val() === '')
            {
                $availableBox.html(availableHTML);

                $("#selected-courses :input").each(function() {
                    $availableBox.find('input[value="' + $(this).val() + '"]').attr('checked', true);
                });

            }
            else
            {
                var matchedCourses = crssearch.search($inputSearch.val());
                setAvailableCourses(matchedCourses);
            }
        }

        // Sets the availableBox to the passed array of course objects
        function setAvailableCourses(courses)
        {
            $.each(courses, function()
            {
                addToAvailable(this);
            });
        }

        // Adds a given course object to the available box.
        function addToAvailable(course)
        {
            if($selectedBox.find('input[value="' + course.id + '"]').length > 0)
            {
                course.checked = 'checked';
                var html = availableTemplate(course);
                $availableBox.append(html);
            }
            else
            {
                course.checked = '';
                var html = availableTemplate(course);
                $availableBox.append(html);
            }
        }

        function generateCourseList(courses)
        {
            var html = '';

            $.each(courses, function(index, course) {
                course.name = course.dept + ' ' + course.code + ' ' + course.section;
                course.checked = '';
                html += availableTemplate(course);
            });

            return html;
        }

    }
};